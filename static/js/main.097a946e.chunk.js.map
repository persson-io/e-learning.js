{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/YoutubeEmbed.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","console","log","Task","task","onDelete","cursor","id","description","Tasks","tasks","map","YoutubeEmbed","embedId","width","height","src","frameBorder","allow","allowFullScreen","App","useState","reminder","setTasks","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAEMA,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAQC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5B,OACI,wBAAQA,QAASA,EAASC,MAAO,CAAEC,gBAAiBJ,GAASK,UAAU,MAAvE,SAA8EJ,KAItFF,EAAOO,aAAe,CAClBN,MAAO,aASID,QCfTQ,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAKd,OACI,yBAAQH,UAAU,SAAlB,UACI,6BAAKG,IACL,cAAC,EAAD,CAAQR,MAAM,QAAQC,KAAK,MAAMC,QAPzB,WACZO,QAAQC,IAAI,YAOR,cAAC,EAAD,CAAQV,MAAM,QAAQC,KAAK,mBAKvCM,EAAOD,aAAe,CAClBE,MAAO,SAaID,Q,OCdAI,EAfF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClB,OACI,sBAAKR,UAAU,OAAf,UACI,+BACKO,EAAKX,KAAM,IACZ,cAAC,IAAD,CACIE,MAAO,CAAEW,OAAQ,WACjBZ,QAAS,kBAAMW,EAASD,EAAKG,UAGrC,4BAAIH,EAAKI,kBCANC,EAVD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOL,EAAe,EAAfA,SACpB,OACI,mCACKK,EAAMC,KAAI,SAACP,GAAD,OACP,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,SAAUA,GAA/BD,EAAKG,UCejBK,G,MAlBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,qBAAKhB,UAAU,mBAAf,SACE,wBACEiB,MAAM,MACNC,OAAO,MACPC,IAAG,wCAAmCH,GACtCI,YAAY,IACZC,MAAM,2FACNC,iBAAe,EACfnB,MAAM,yBCoBGoB,MAzBf,WACE,MAA0BC,mBAAS,CACjC,CACId,GAAI,EACJd,KAAM,wBACNe,YAAa,2EACbc,UAAU,KALhB,mBAAOZ,EAAP,KAAca,EAAd,KAcA,OACE,sBAAK1B,UAAU,YAAf,UACE,2DACA,cAAC,EAAD,CAAcgB,QAAQ,gBACtB,cAAC,EAAD,IACCH,EAAMc,OAAS,EAAI,cAAC,EAAD,CAAOd,MAAOA,EAAOL,SAT1B,SAACE,GAClBgB,EAASb,EAAMe,QAAO,SAACrB,GAAD,OAAUA,EAAKG,KAAOA,SAQyB,2CCf1DmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.097a946e.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color , text, onClick }) => {\r\n    return (\r\n        <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'    \r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({ title }) => {\r\n    const onClick = () => {\r\n        console.log(\"Click\")\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color=\"Black\" text=\"Add\" onClick={onClick}/>\r\n            <Button color=\"Black\" text=\"Next Video\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: \"Tasks\"\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyle = {\r\n//     color: \"red\", \r\n//     backgroundColor: \"black\"\r\n// }\r\n\r\nexport default Header\r\n","import { FaTimes } from \"react-icons/fa\"\r\n\r\nconst Task = ({ task, onDelete }) => {\r\n    return (\r\n        <div className=\"task\">\r\n            <h3>\r\n                {task.text}{\" \"} \r\n                <FaTimes \r\n                    style={{ cursor: \"pointer\" }} \r\n                    onClick={() => onDelete(task.id)}\r\n                />\r\n            </h3>\r\n            <p>{task.description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nconst Tasks = ({ tasks, onDelete }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} task={task} onDelete={onDelete}/>\r\n            ))} \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst YoutubeEmbed = ({ embedId }) => (\r\n  <div className=\"video-responsive\">\r\n    <iframe\r\n      width=\"853\"\r\n      height=\"480\"\r\n      src={`https://www.youtube.com/embed/${embedId}`}\r\n      frameBorder=\"0\"\r\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n      allowFullScreen\r\n      title=\"Embedded youtube\"\r\n    />\r\n  </div>\r\n);\r\n\r\nYoutubeEmbed.propTypes = {\r\n  embedId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default YoutubeEmbed;","import { useState } from \"react\"\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport \"./styles.css\"\nimport YoutubeEmbed from \"./components/YoutubeEmbed\"\n\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: \"Practice cooking rice\",\n        description: \"Try and take mental notes of what could be improved with your technique.\",\n        reminder: true,\n    }\n  ])\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Part 1: How To Cook Rice </h1>\n      <YoutubeEmbed embedId=\"Jf75I9LKhvg\" />\n      <Header />\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask}/>: (\"You are done with all your tasks! :)\")}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}